function storageAvailable(e) {
    try {
        var t = window[e],
            o = "__storage_test__";
        t.setItem(o, o);
        t.removeItem(o);
        return true;
    } catch (e) {
        return e instanceof DOMException &&
               (e.code === 22 ||
                e.code === 1014 ||
                e.name === "QuotaExceededError" ||
                e.name === "NS_ERROR_DOM_QUOTA_REACHED") &&
               t.length !== 0;
    }
}

let lsDb, mmsgt;

function EasasStyle(e, t) {
    var o = t.getProperty("color"),
        r = t.getProperty("nombre"),
        i = t.getProperty("visible"),
        n = "#808080";

    if (o) {
        if (o == 1 || o == 2)      n = "#2cff2c";
        else if (o == 3)           n = "#ff2c2c";
        else if (o == 4)           n = "#ffa100";
    }

    return {
        visible: i,
        icon: {
            path: google.maps.SymbolPath.CIRCLE,
            fillColor: "#185f99",
            fillOpacity: .6,
            scale: 3 * (e - 3),
            strokeColor: n,
            strokeWeight: 2,
            strokeOpacity: .8
        },
        title: r
    };
}

function EsdecaStyle(e, t) {
    var o = t.getProperty("color"),
        r = t.getProperty("nombre"),
        i = t.getProperty("visible"),
        n = "#808080";

    if (o) {
        if (o == 1 || o == 2)      n = "#2cff2c";
        else if (o == 3)           n = "#ff2c2c";
        else if (o == 4)           n = "#ffa100";
    }

    return {
        visible: i,
        icon: {
            path: google.maps.SymbolPath.CIRCLE,
            fillColor: n,
            fillOpacity: .7,
            scale: e - 4,
            strokeColor: "black",
            strokeWeight: 1
        },
        title: r
    };
}

function RepetidorStyle(e, t) {
    var o = t.getProperty("color"),
        r = t.getProperty("nombre"),
        i = t.getProperty("visible"),
        n = "#808080";

    if (o) {
        if (o == 1 || o == 2)      n = "#2cff2c";
        else if (o == 3)           n = "#ff2c2c";
        else if (o == 4)           n = "#ffa100";
    }

    return {
        visible: i,
        icon: {
            path: "M 20,25 C 15.333333,23.333333 10.666667,21.666667 6,20 9.6666667,16.666667 13.333333,13.333333 17,10 14.666667,6.6666667 12.333333,3.3333333 10,0 M 5,25 C 9.6666667,23.333333 14.333333,21.666667 19,20 15.333333,16.666667 11.666667,13.333333 8,10 10.333333,6.6666667 12.666667,3.3333333 15,0 M 5,25 C 6.6666667,16.666667 8.3333333,8.3333333 10,0 c 1.666667,0 3.333333,0 5,0 1.666667,8.3333333 3.333333,16.666667 5,25 -5,0 -10,0 -15,0 z",
            fillColor: n,
            fillOpacity: .5,
            scale: (e - 3) / 7,
            strokeColor: "black",
            strokeWeight: .5,
            anchor: new google.maps.Point(12, 25)
        },
        title: r
    };
}

function SsnStyle(e, t) {
    var o = t.getProperty("magnitud"),
        r = t.getProperty("activo"),
        i = t.getProperty("localidad"),
        n = t.getProperty("profundidad"),
        a = t.getProperty("fecha"),
        l = o / 7 * e / 7,
        c = r ? "red" : "yellow",
        s = r ? "orange" : "red",
        g = 1e3 * o,
        m = 7 + 1.5 * l,
        p = .55,
        d = 1;

    if (r) {
        l *= 1.1;
        g *= 10;
        p = .8;
        d = 2;
    }

    return {
        visible: t.getProperty("visible"),
        icon: {
            path: "M 0 7 L 7.053 9.708 L 6.657 2.163 L 11.413 -3.708 L 4.114 -5.663 L 0 -12 L -4.114 -5.663 L -11.413 -3.708 L -6.657 2.163 L -7.053 9.708 L 0 7 z",
            scale: l,
            fillColor: c,
            fillOpacity: p,
            strokeColor: s,
            strokeWeight: d,
            strokeOpacity: .75
        },
        label: {
            fontWeight: "bold",
            fontSize: m + "px",
            color: "#202020",
            text: o
        },
        optimized: false,
        title: `${a} sismo magnitud ${o}, ${i}, profundidad ${n}km`,
        zIndex: g
    };
}

function EventoStyle(e, t) {
    var o = t.getProperty("color"),
        fill = o == 1 ? "#00C000" : o == 2 ? "#A0A000" : "#C00000";

    return {
        visible: t.getProperty("visible"),
        icon: {
            path: "M0,0 m-11,0 a11,11 0 1,0 22,0 a11,11 0 1,0 -22,0 M0,0 m-8,0 a8,8 0 1,0 16,0 a8,8 0 1,0 -16,0 M0,0 m-5,0 a5,5 0 1,0 10,0 a5,5 0 1,0 -10,0",
            scale: 1.1 * e / 8,
            fillColor: fill,
            fillOpacity: .1,
            strokeColor: fill,
            strokeWeight: 1.5,
            strokeOpacity: .75
        },
        optimized: false,
        zIndex: 1e4
    };
}

function EpicentroStyle(e, t) {
    var o = t.getProperty("color"),
        stroke = o == 1 ? "#ff8080" : o == 2 ? "#ff8000" : "#ff0000",
        visible = t.getProperty("visible"),
        fh = t.getProperty("fh") || 0,
        age = Date.now() - fh,
        opacity = age < 1728e5 ? 1 - age / 1728e5 : 0;

    return {
        visible: visible,
        icon: {
            path: "M0,0 m-11,0 a11,11 0 1,0 22,0 a11,11 0 1,0 -22,0 M0,0 m-9,0 a9,9 0 1,0 18,0 a9,9 0 1,0 -18,0 M0,0 m-7,0 a7,7 0 1,0 14,0 a7,7 0 1,0 -14,0 M0,0 m-5,0 a5,5 0 1,0 10,0 a5,5 0 1,0 -10,0",
            scale: 5 * e / 8,
            strokeColor: stroke,
            strokeWeight: 1.5,
            strokeOpacity: opacity
        },
        optimized: false
    };
}

function AlertaStyle(e, t) {
    var visible = t.getProperty("visible"),
        alerta  = t.getProperty("alerta"),
        color   = t.getProperty("color"),
        nombre  = t.getProperty("nombre"),
        pathSVG = "M0,0 m-11,0 a11,11 0 1,0 22,0 a11,11 0 1,0 -22,0 M0,0 m-9,0 a9,9 0 1,0 18,0 a9,9 0 1,0 -18,0 M0,0 m-7,0 a7,7 0 1,0 14,0 a7,7 0 1,0 -14,0";

    if (color == 3 || color == 2) {
        return {
            visible: visible,
            icon: {
                path: pathSVG,
                scale: (color == 3 ? 3.5 : 2) * e / 8,
                strokeColor: "#00B0ff",
                strokeWeight: 1.5,
                strokeOpacity: .8
            },
            optimized: false,
            title: `Alerta ${alerta} en ${nombre}`
        };
    }
}

function SasmexStyle(e, t) {
    var mag  = e.getProperty("mag"),
        type = e.getProperty("tipo");

    if (e.getProperty("visible") === undefined) {
        e.setProperty("visible", true);
    }

    if (mag) {
        return { icon: getCircle(mag) };
    } else if (type) {
        switch (type) {
            case 1:       return EasasStyle(t, e);
            case 2:       return EsdecaStyle(t, e);
            case 3:       return RepetidorStyle(t, e);
            case "ssn":   return SsnStyle(t, e);
            case "evento":return EventoStyle(t, e);
            case "epicentro": return EpicentroStyle(t, e);
            case "alerta":    return AlertaStyle(t, e);
        }
    }
}

function getCircle(e) {
    return {
        path: google.maps.SymbolPath.CIRCLE,
        fillColor: "red",
        fillOpacity: .2,
        scale: Math.pow(2, e) / 2,
        strokeColor: "white",
        strokeWeight: .5
    };
}

function getMiPosicionUrl() {
    return "img/position-yellow.svg";
}

function getTipoUrl(e) {
    return e == 1 ? "img/central-leyenda.svg"
         : e == 2 ? "img/esdeca.svg"
         : e == 3 ? "img/torre-leyenda.svg"
         : undefined;
}

function getIntensidadUrl(e) {
    return e == 1 ? "img/EventoLigero.svg"
         : e == 2 ? "img/EventoModerado.svg"
         : e == 3 ? "img/EventoFuerte.svg"
         : undefined;
}

function getLegendDiv(container, iconUrl, text) {
    container.innerHTML = `<img class="leyenda-icon" src="${iconUrl}"> ${text}`;
    return container;
}

function muestraMensaje(msg, container, timeout) {
    timeout = timeout || 15000;
    var h1 = document.createElement("h1");
    h1.className = "infoTitulo";
    h1.innerHTML = msg;

    var first = container.firstChild;
    if (first) {
        clearTimeout(mmsgt);
        container.removeChild(first);
    }

    container.appendChild(h1);
    mmsgt = setTimeout(() => container.removeChild(h1), timeout);
}

function addInfoSismo(title, desc, container, idx) {
    var h4 = document.createElement("h4");
    h4.innerHTML = title;

    var p = document.createElement("p");
    p.innerHTML = desc;

    var a = document.createElement("a");
    a.href = "#";
    a.onclick = () => showEvento(procesarService.estado.eventosInfoBuff.lista[idx]);
    a.appendChild(h4);
    a.appendChild(p);

    var first = container.firstChild;
    first ? container.insertBefore(a, first) : container.appendChild(a);
}

function crearTablaListaEventos(list) {
    var table = document.createElement("table");
    table.className = "table table-hover table-condensed";

    var cols = [
        { head:"Nombre",      width:105, cl:"left",   html: e=>e.nombre },
        { head:"Intensidad",  width:70,  cl:"center", html: e=>e.nivel.getLabel() },
        { head:"Alerta",      width:50,  cl:"center", html: e=>e.publica||e.preventiva ? "âœ”" : "" },
        { head:"Ssn",         width:50,  cl:"center", html: e=> e.ssn.isInfo ? e.ssn.ssnMagnitud : "" },
        { head:"Fecha",       width:130, cl:"center", html: e=>e.fhtxt },
        { head:"Localidad",   width:205, cl:"left",   html: e=>e.region }
    ];

    var thead = table.createTHead().insertRow(0),
        tbody = document.createElement("tbody");

    cols.forEach((col, i) => {
        var cell = thead.insertCell(i);
        cell.style.textAlign = "center";
        cell.style.width = col.width + "px";
        cell.innerHTML = col.head;
    });

    list.forEach((item, idx) => {
        var row = tbody.insertRow(idx);
        row.onclick = () => showEvento(item);
        if (item.nivel.grado == 2) row.className = "intensidad-moderada-color";
        if (item.nivel.grado == 3) row.className = "intensidad-fuerte-color";

        cols.forEach((col, i) => {
            var cell = row.insertCell(i);
            cell.style.textAlign = col.cl;
            cell.style.width = col.width + "px";
            cell.innerHTML = col.html(item);
        });
    });

    table.appendChild(tbody);
    return table;
}

function ssnMarker(e, highlight) {
    highlight = highlight || false;
    var scaleFactor = (highlight ? 1.2 : 0.9) * e.m156.magnitud / 4;
    var fill = highlight ? "red" : (e.m156.magnitud >= 5 ? "orange" : "yellow");
    var stroke = highlight ? "yellow" : "red";
    var z = 1e3 * e.m156.magnitud;
    var fontSize = 8 + 2 * scaleFactor;

    return new google.maps.Marker({
        position: new google.maps.LatLng(e.m156.lat, e.m156.lng),
        animation: "pulse",
        icon: {
            path: "M 0 7 L 7.053 9.708 L 6.657 2.163 L 11.413 -3.708 L 4.114 -5.663 L 0 -12 L -4.114 -5.663 L -11.413 -3.708 L -6.657 2.163 L -7.053 9.708 L 0 7 z",
            scale: scaleFactor,
            fillColor: fill,
            fillOpacity: .6,
            strokeColor: stroke,
            strokeWeight: 1,
            strokeOpacity: .75
        },
        label: {
            fontWeight: "bold",
            fontSize: fontSize + "px",
            color: highlight ? "white" : "black",
            text: e.m156.magnitud
        },
        optimized: false,
        map: map,
        title: `${e.m156.shortfhtxt} prof: ${e.m156.profundidad}km`,
        zIndex: z
    });
}

function LogoMarker(e, t) {
    t = t || 1;
    var size = t === 1
        ? new google.maps.Size(600, 500)
        : new google.maps.Size(300, 250);

    return new google.maps.Marker({
        position: e,
        icon: {
            url: "img/cires-logo-gris15.png",
            origin: new google.maps.Point(150, 125),   // CORRECTED: use 'new'
            scaledSize: size
        },
        optimized: false
    });
}

function ModeradoMarker(e) {
    return new google.maps.Marker({
        position: e.getGeometry().get(),
        icon: {
            url: "img/EventoModerado.svg",
            size: new google.maps.Size(60, 60),
            scaledSize: new google.maps.Size(30, 30),
            anchor: new google.maps.Point(15, 15)
        },
        optimized: false,
        map: map
    });
}

function FuerteMarker(e) {
    return new google.maps.Marker({
        position: e.getGeometry().get(),
        icon: {
            url: "img/EventoFuerte.svg",
            size: new google.maps.Size(60, 60),
            scaledSize: new google.maps.Size(30, 30),
            anchor: new google.maps.Point(15, 15)
        },
        optimized: false,
        map: map
    });
}

function EpicentroMarker(e) {
    return new google.maps.Marker({
        position: e,
        icon: {
            url: "img/Epicentro.svg",
            size: new google.maps.Size(150, 150),
            scaledSize: new google.maps.Size(150, 150),
            anchor: new google.maps.Point(75, 75)
        }
    });
}

window.onload = function() {
    window.indexedDB.open("sasmex", 1).onerror = function() {};
};
